Index: web/Public/static/js/app.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import '../node_modules/antd/dist/antd.min.css';\nimport '../less/private.less';\n\nimport BaseApp from './core/app.base'\n\nclass App extends BaseApp {\n    constructor(props) {\n\n        super(props);\n\n        this.config = {\n            routes: [\n                {\n                    path: __mei_wei__.env.basepath + '/dashboard',\n                    getComponents(nextState, cb) {\n                        require.ensure([], (require) => {\n                            var page = require('./views/dashboard.js');\n                            cb(null, page)\n                        }, 'views/dashboard')\n                    },\n                }\n            ],\n            \n            rooter: 'appview',\n            routerType: \"browser\"\n        }\n\n    }\n}\n\n\n/**\n * 增加一个图片资源路径，解决img 中引用图片的资源图片的问题\n * */\n__mei_wei__ && __mei_wei__[\"env\"] && (function(){\n\n    var env=__mei_wei__[\"env\"];\n\n    if(env.environment.toLowerCase() == \"dev\") {\n        env[\"imgPath\"] = location.origin + \"/public/static/img/\";\n    }\n\n})();\n\nvar app = new App();\n\napp.start();\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/Public/static/js/app.js	(revision 59a0ef4088ba82b1f4da3d19070b141b753bfac6)
+++ web/Public/static/js/app.js	(date 1537462018360)
@@ -3,43 +3,53 @@
 
 import BaseApp from './core/app.base'
 
-class App extends BaseApp {
-    constructor(props) {
-
-        super(props);
-
-        this.config = {
-            routes: [
-                {
-                    path: __mei_wei__.env.basepath + '/dashboard',
-                    getComponents(nextState, cb) {
-                        require.ensure([], (require) => {
-                            var page = require('./views/dashboard.js');
-                            cb(null, page)
-                        }, 'views/dashboard')
-                    },
-                }
-            ],
-            
-            rooter: 'appview',
-            routerType: "browser"
-        }
-
-    }
+class App
+  extends BaseApp{
+  constructor(props) {
+    
+    super(props);
+    
+    this.config = {
+      routes: [
+        {
+          path: __mei_wei__.env.basepath + '/dashboard',
+          getComponents(nextState,cb) {
+            require.ensure([],(require) => {
+              var page = require('./views/dashboard.js');
+              cb(null,page)
+            },'views/dashboard')
+          },
+        },
+        {
+          path: __mei_wei__.env.basepath + '/dashboard2',
+          getComponents(nextState,cb) {
+            require.ensure([],(require) => {
+              var page = require('./views/xmd.js');
+              cb(null,page)
+            },'views/dashboard2')
+          },
+        }
+      ],
+      
+      rooter: 'appview',
+      routerType: "browser"
+    }
+    
+  }
 }
 
 
 /**
  * 增加一个图片资源路径，解决img 中引用图片的资源图片的问题
  * */
-__mei_wei__ && __mei_wei__["env"] && (function(){
-
-    var env=__mei_wei__["env"];
-
-    if(env.environment.toLowerCase() == "dev") {
-        env["imgPath"] = location.origin + "/public/static/img/";
-    }
-
+__mei_wei__ && __mei_wei__[ "env" ] && (function() {
+  
+  var env = __mei_wei__[ "env" ];
+  
+  if (env.environment.toLowerCase() == "dev") {
+    env[ "imgPath" ] = location.origin + "/public/static/img/";
+  }
+  
 })();
 
 var app = new App();
Index: web/Public/static/js/views/xmd.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from 'react'\nimport BaseView from '../core/view.base'\nimport $ from 'jquery'\n//图表模型\nimport {\n  Labelline,\n  Basicbar,\n} from '../ui/ui.charts'\n\nimport {\n  ProvinceCountModel,\n  YearCountModel\n} from '../models/business.models';\n\nimport Mock from '../mock/mock';\n\nimport SearchBar from '../ui/ui.searchbar.js';\n\nimport Slider from \"react-slick\";\n\n//定义数据模型\nconst provinceCountModel = ProvinceCountModel.getInstance(),\n      yearCountModel = YearCountModel.getInstance();\n\nclass Dashboard extends BaseView {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n        \t\n        }\n    }\n\n    componentDidMount(){\n      // this.pageInit();\n      this.setState({\n        pageStatus:'init'\n      });\n    }\n\n    pageInit(){\n      this.fetchProvinceCount();\n      this.fetchYearCount();\n      this.fetchMeasureCount();\n      this.fetchRateCount();\n      this.fetchTradeCount();\n      this.fetchEventCount();\n      this.fetchValidityEventCount();\n      this.fetchProvinceEventCount();\n      this.fetchTradeEventCount();\n    }\n\n    //不同省份安装情况\n    fetchProvinceCount(token){\n      const self = this;\n      provinceCountModel.setParam({\n        token:token\n      });\n      provinceCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n\n        self.setState({\n          provinceCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //安装时间安装情况\n    fetchYearCount(token){\n      const self = this;\n      yearCountModel.setParam({\n        token:token\n      });\n      yearCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n\n        self.setState({\n          yearCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //计量类型统计\n    fetchMeasureCount(token){\n      const self = this;\n      measureCountModel.setParam({\n        token:token\n      });\n      measureCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n\n        self.setState({\n          measureCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //综合倍率统计\n    fetchRateCount(token){\n      const self = this;\n      rateCountModel.setParam({\n        token:token\n      });\n      rateCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n\n        self.setState({\n          rateCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //行业类型统计\n    fetchTradeCount(token){\n      const self = this;\n      measureCountModel.setParam({\n        token:token\n      });\n      measureCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n        self.setState({\n          tradeCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //事件类型情况\n    fetchEventCount(token){\n      const self = this;\n      eventCountModel.setParam({\n        token:token\n      });\n      eventCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n        self.setState({\n          eventCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //有效性事件统计  未完\n    fetchValidityEventCount(token){\n      const self = this;\n      validityEventCountModel.setParam({\n        token:token\n      });\n      validityEventCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.countList || [];\n        const data = {\n          title:'事件有效性',\n          data:listData,\n          dimension:'eventName',\n          field:'count',\n          height:400,\n          padding:[80, 100, 80, 80],\n          radius:0.75,\n          innerRadius:0.6\n        };\n\n        self.setState({\n          validityEventCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //不同省份事件上报情况\n    fetchProvinceEventCount(token){\n      const self = this;\n      provinceEventCountModel.setParam({\n        token:token\n      });\n      provinceEventCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.eventList || [];\n        self.setState({\n          provinceEventCountData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n    //行业类型\n    fetchTradeEventCount(token){\n      const self = this;\n      tradeEventCountModel.setParam({\n        token:token\n      });\n      tradeEventCountModel.excute((res)=>{\n        const resData = res.data || {};\n        const listData = resData.eventList || [];\n\n        self.setState({\n          tradeEventCountMData:listData\n        });\n      },(err)=>{\n        console.log(err)\n      })\n    }\n\n\n\n    renderSearchBar(){\n      const {\n        provinceCountData,\n        yearCountData,\n        measureCountData,\n        rateCountData,\n        tradeCountData\n      } = this.state;  \n\n      return(\n        <SearchBar />\n      )\n    }\n    renderPageCenter(){\n      const {\n        provinceCountData\n      } = this.state; \n\n\n      const height = $('.section-content.map').height();\n      const mapHeight = height - 50;\n\n      const mapData = {\n        height:mapHeight,\n        // userData:provinceCountData,\n        userData:Mock.charts1,\n        padding:'auto',\n        xAxis:'name',\n        yAxis:'count',\n        scale:{\n          'count': {\n            alias: '安装数量'\n          }\n        },\n        forceFit:true\n      }\n\n      return (\n        <div className='page-center'>\n          <h1>巡检仪大数据分析平台</h1>\n          <div className='section-content has-child'>\n            <div className='section-left child'>\n              <h4>巡检仪安装总量</h4>\n              <div className='num-box'>\n                <li className='num'>1</li>\n                <li className='num'>2</li>\n                <li className='num'>3</li>\n                <li className='num'>3</li>\n                <li className='num'>4</li>\n                <li className='num'>4</li>\n              </div>\n            </div>\n            <div className='section-right child'>\n              <h4>巡检仪线上运行数量</h4>\n              <div className='num-box'>\n                <li className='num'>2</li>\n                <li className='num'>3</li>\n                <li className='num'>4</li>\n                <li className='num'>5</li>\n                <li className='num'>6</li>\n                <li className='num'>3</li>\n              </div>\n            </div>\n          </div>\n          <div className='section-content map'>\n            <ChinaMapChart {...mapData}/>\n            <div className='bottom-txt'>中国电力科学研究院</div>\n          </div>\n        </div>\n      )\n    }\n    renderPageRight(){\n\n      const {\n        eventCountData,\n        validityEventCountData,\n        provinceEventCountData,\n        tradeEventCountMData\n      } = this.state;  \n\n      const height = $('.page-right .charts-content').height();\n      const chartHeight = (height - 80 - 75 - 40) / 3;\n      //事件有效性\n      const charts6 = {\n        // data:validityEventCountData,\n        data:Mock.charts6,\n        height:chartHeight,\n        forceFit:true,\n        padding:'auto',\n        field:'count',\n        dimension:'eventName',\n        cols:{\n          percent: {\n            formatter: val => {\n              val = (val * 100).toFixed(0) + \"%\";\n              return val;\n            }\n          }\n        }\n      }\n      //事件类型\n      const charts7 = {\n        // data:eventCountData,\n        data:Mock.charts7,\n        height:chartHeight,\n        forceFit:true,\n        padding:'auto',\n        field:'count',\n        dimension:'eventName',\n        cols:{\n          percent: {\n            formatter: val => {\n              val = (val * 100).toFixed(0) + \"%\";\n              return val;\n            }\n          }\n        }\n      }\n\n      const charts8 = {\n        data: [{\n          name: \"London\",\n          \"Jan.\": 18.9,\n          \"Feb.\": 28.8,\n          \"Mar.\": 39.3,\n          \"Apr.\": 81.4,\n          May: 47,\n          \"Jun.\": 20.3,\n          \"Jul.\": 24,\n          \"Aug.\": 35.6\n        }, {\n          name: \"Berlin\",\n          \"Jan.\": 12.4,\n          \"Feb.\": 23.2,\n          \"Mar.\": 34.5,\n          \"Apr.\": 99.7,\n          May: 52.6,\n          \"Jun.\": 35.5,\n          \"Jul.\": 37.4,\n          \"Aug.\": 42.4\n        }],\n        fields:[\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\"],\n        keyName:'月份',\n        value:'月均降雨量',\n        fieldsName:'name',\n        style:{\n          overflow:'auto'\n        },\n        padding:'auto',\n        height:chartHeight\n      };\n\n      const charts9 = {\n        // data:tradeEventCountMData,\n        data:Mock.charts7,\n        height:chartHeight,\n        padding:'auto',\n        fields:['count'],\n        xAxis:'eventName',\n        yAxis:'count'\n\n      }\n\n\n      return (\n        <div className='page-right'>\n          <div className='title-content'>\n            <h3>异常综合统计</h3>\n          </div>\n          <div className='charts-content'>\n            <div className='section-content has-child'>\n                <div className='section-left child'>\n                  <h6>事件有效性</h6>\n                  <Labelline {...charts6}/>\n                </div>\n                <div className='section-right child'>\n                  <h6>事件类型</h6>\n                  <Labelline {...charts7}/>\n                </div>\n            </div>\n\n            <div className='section-content has-child' style={{height:'75px',flex:'none'}}>\n              <div className='child'>\n                <h6 className='text-blue'>月上报事件数</h6>\n                <div className='text'>\n                  <span>{'123,123'}</span> 件\n                </div>\n              </div>\n              <div className='child'>\n                <h6 className='text-blue'>有效性</h6>\n                <div className='text'>\n                  <span>{'123.22'}</span> %\n                </div>\n              </div>\n            </div>\n            <div className='section-content'>\n              <h6>不同事件上报事件情况</h6>\n              <Groupedcolumn {...charts8}/>\n            </div>\n            <div className='section-content flex-column'>\n              <h6>行业类型</h6>\n              <Basicradar {...charts9}/>\n            </div>\n          </div>\n\n        </div>\n      )\n    }\n    renderMain(){\n\n      const setting = {\n\n      }\n\n        return (\n          <div className='page-xmd page'>\n            <h1 className='page-title'>{this.state.pageTitle}</h1>\n            <div className='page-main'>\n              <Slider {...setting}>\n                {this.renderPageOne()}\n                {this.renderPageTwo()}\n              </Slider>\n            </div>\n          </div>\n        )\n\n    }\n\n}\n\nmodule.exports = Dashboard;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/Public/static/js/views/xmd.js	(revision 59a0ef4088ba82b1f4da3d19070b141b753bfac6)
+++ web/Public/static/js/views/xmd.js	(date 1537461953736)
@@ -453,4 +453,4 @@
 
 }
 
-module.exports = Dashboard;
\ No newline at end of file
+module.exports = Dashboard2;
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"JavaScriptSettings\">\n    <option name=\"languageLevel\" value=\"ES6\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 59a0ef4088ba82b1f4da3d19070b141b753bfac6)
+++ .idea/misc.xml	(date 1537461251783)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="JavaScriptSettings">
-    <option name="languageLevel" value="ES6" />
+    <option name="languageLevel" value="JSX" />
   </component>
 </project>
\ No newline at end of file
