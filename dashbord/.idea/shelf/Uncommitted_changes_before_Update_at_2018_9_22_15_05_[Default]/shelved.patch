Index: web/Public/static/js/views/secondaryLoopLeft.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React, {Component} from 'react'\nimport BaseView from '../core/view.base'\nimport $ from 'jquery'\n//图表模型\nimport {\n    Basicline,\n    Basiccolumn,\n    Labelline,\n    Grouped,\n    Groupedcolumn,\n    Basicbar,\n    Basicradar,\n    ChinaMapChart\n} from '../ui/ui.charts'\n\nimport {\n    ProvinceCountModel,\n    YearCountModel,\n    MeasureCountModel,\n    TradeCountModel,\n    EventCountModel,\n    RateCountModel,\n    ValidityEventCountModel,\n    ProvinceEventCountModel,\n    TradeEventCountModel,\n} from '../models/business.models';\n\nimport Mock from '../mock/mock';\n\n//定义数据模型\nconst provinceCountModel = ProvinceCountModel.getInstance(),\n    yearCountModel = YearCountModel.getInstance(),\n    measureCountModel = MeasureCountModel.getInstance(),\n    rateCountModel = RateCountModel.getInstance(),\n    tradeCountModel = TradeCountModel.getInstance(),\n    eventCountModel = EventCountModel.getInstance(),\n    validityEventCountModel = ValidityEventCountModel.getInstance(),\n    provinceEventCountModel = ProvinceEventCountModel.getInstance(),\n    tradeEventCountModel = TradeEventCountModel.getInstance();\n\nclass SecondaryLoopLeft extends BaseView {\n\n    constructor(props) {\n\n        super(props);\n\n        this.state = {\n\n        }\n    }\n\n    componentDidMount(){\n        // this.pageInit();\n        this.setState({\n            pageStatus:'init'\n        });\n    }\n\n    pageInit(){\n        this.fetchProvinceCount();\n        this.fetchYearCount();\n        this.fetchMeasureCount();\n        this.fetchRateCount();\n        this.fetchTradeCount();\n        this.fetchEventCount();\n        this.fetchValidityEventCount();\n        this.fetchProvinceEventCount();\n        this.fetchTradeEventCount();\n\n    }\n\n    //不同省份安装情况\n    fetchProvinceCount(token){\n        const self = this;\n        provinceCountModel.setParam({\n            token:token\n        });\n        provinceCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n\n            self.setState({\n                provinceCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //安装时间安装情况\n    fetchYearCount(token){\n        const self = this;\n        yearCountModel.setParam({\n            token:token\n        });\n        yearCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n\n            self.setState({\n                yearCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //计量类型统计\n    fetchMeasureCount(token){\n        const self = this;\n        measureCountModel.setParam({\n            token:token\n        });\n        measureCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n\n            self.setState({\n                measureCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //综合倍率统计\n    fetchRateCount(token){\n        const self = this;\n        rateCountModel.setParam({\n            token:token\n        });\n        rateCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n\n            self.setState({\n                rateCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //行业类型统计\n    fetchTradeCount(token){\n        const self = this;\n        measureCountModel.setParam({\n            token:token\n        });\n        measureCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n            self.setState({\n                tradeCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //事件类型情况\n    fetchEventCount(token){\n        const self = this;\n        eventCountModel.setParam({\n            token:token\n        });\n        eventCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n            self.setState({\n                eventCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //有效性事件统计  未完\n    fetchValidityEventCount(token){\n        const self = this;\n        validityEventCountModel.setParam({\n            token:token\n        });\n        validityEventCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.countList || [];\n            const data = {\n                title:'事件有效性',\n                data:listData,\n                dimension:'eventName',\n                field:'count',\n                height:400,\n                padding:[80, 100, 80, 80],\n                radius:0.75,\n                innerRadius:0.6\n            };\n\n            self.setState({\n                validityEventCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //不同省份事件上报情况\n    fetchProvinceEventCount(token){\n        const self = this;\n        provinceEventCountModel.setParam({\n            token:token\n        });\n        provinceEventCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.eventList || [];\n            self.setState({\n                provinceEventCountData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n    //行业类型\n    fetchTradeEventCount(token){\n        const self = this;\n        tradeEventCountModel.setParam({\n            token:token\n        });\n        tradeEventCountModel.excute((res)=>{\n            const resData = res.data || {};\n            const listData = resData.eventList || [];\n\n            self.setState({\n                tradeEventCountMData:listData\n            });\n        },(err)=>{\n            console.log(err)\n        })\n    }\n\n\n\n    renderPageLeft(){\n        const {\n            provinceCountData,\n            yearCountData,\n            measureCountData,\n            rateCountData,\n            tradeCountData\n        } = this.state;\n\n        const height = $('.page-left .charts-content').height();\n        const chartHeight = (height - 160) / 4;\n\n        //不同省份安装情况\n        const charts1 = {\n            // data:provinceCountData,\n            // data:Mock.charts1,\n            height:chartHeight,\n            xAxis:'name',\n            yAxis:'count',\n            forceFit:true,\n            padding:'auto',\n            cols:{\n                count: {\n                    tickCount: 2\n                }\n            },\n            style:{\n                overflow:'auto',\n            },\n            xLabel:{\n                offset:15,\n            },\n            yLabel:{\n                offset:5,\n            }\n        }\n\n        //安装时间\n        const charts2 = {\n            // data:yearCountData,\n            data:Mock.charts2,\n            height:chartHeight,\n            xAxis:'year',\n            yAxis:'count',\n            forceFit:true,\n            padding:'auto',\n            cols:{\n                year: {\n                    tickInterval: 1,\n                }\n            },\n            style:{\n                overflow:'auto',\n            },\n            xLabel:{\n                offset:15,\n            },\n            yLabel:{\n                offset:5,\n            }\n        }\n\n        //计量类型\n        const charts3 = {\n            // data:measureCountData,\n            data:Mock.charts3,\n            height:chartHeight,\n            forceFit:true,\n            padding:'auto',\n            field:'count',\n            dimension:'name',\n            cols:{\n                percent: {\n                    formatter: val => {\n                        val = (val * 100).toFixed(0) + \"%\";\n                        return val;\n                    }\n                }\n            }\n        }\n\n        //综合倍率\n        const charts4 = {\n            // data:rateCountData,\n            data:Mock.charts4,\n            height:chartHeight,\n            forceFit:true,\n            padding:'auto',\n            field:'count',\n            dimension:'rate',\n            cols:{\n                percent: {\n                    formatter: val => {\n                        val = (val * 100).toFixed(0) + \"%\";\n                        return val;\n                    }\n                }\n            }\n        }\n\n        //行业类型\n        const charts5 = {\n            // data:tradeCountData,\n            data:Mock.charts5,\n            height:chartHeight,\n            xAxis:'trade',\n            yAxis:'count',\n            forceFit:true,\n            padding:'auto',\n            style:{\n                overflow:'auto',\n            },\n            xLabel:{\n                offset:15,\n            },\n            yLabel:{\n                offset:5,\n            }\n        }\n\n        return (\n            <div className='page-left'>\n                <div className='title-content'>\n                    <h3>安装综合统计</h3>\n                </div>\n                <div className='charts-content'>\n                    <div className='section-content'>\n                        <h6>不同省份安装情况</h6>\n                        <Basiccolumn {...charts1}/>\n                    </div>\n                    <div className='section-content'>\n                        <h6>安装时间</h6>\n                        <Basicline {...charts2} />\n\n                    </div>\n                    <div className='section-content has-child'>\n                        <div className='section-left child'>\n                            <h6>计量类型</h6>\n                            <Labelline {...charts3}/>\n                        </div>\n                        <div className='section-right child'>\n                            <h6>综合倍率</h6>\n                            <Labelline {...charts4}/>\n                        </div>\n                    </div>\n                    <div className='section-content'>\n                        <h6>行业类型</h6>\n                        <Basicbar {...charts5}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n    renderPageCenter(){\n        const {\n            provinceCountData\n        } = this.state;\n\n\n        const height = $('.section-content.map').height();\n        const mapHeight = height - 50;\n\n        const mapData = {\n            height:mapHeight,\n            // userData:provinceCountData,\n            userData:Mock.charts1,\n            padding:'auto',\n            xAxis:'name',\n            yAxis:'count',\n            scale:{\n                'count': {\n                    alias: '安装数量'\n                }\n            },\n            forceFit:true\n        }\n\n        return (\n            <div className='page-center'>\n                <h1>巡检仪大数据分析平台</h1>\n                <div className='section-content has-child'>\n                    <div className='section-left child'>\n                        <h4>巡检仪安装总量</h4>\n                        <div className='num-box'>\n                            <li className='num'>1</li>\n                            <li className='num'>2</li>\n                            <li className='num'>3</li>\n                            <li className='num'>3</li>\n                            <li className='num'>4</li>\n                            <li className='num'>4</li>\n                        </div>\n                    </div>\n                    <div className='section-right child'>\n                        <h4>巡检仪线上运行数量</h4>\n                        <div className='num-box'>\n                            <li className='num'>2</li>\n                            <li className='num'>3</li>\n                            <li className='num'>4</li>\n                            <li className='num'>5</li>\n                            <li className='num'>6</li>\n                            <li className='num'>3</li>\n                        </div>\n                    </div>\n                </div>\n                <div className='section-content map'>\n                    <ChinaMapChart {...mapData}/>\n                    <div className='bottom-txt'>中国电力科学研究院</div>\n                </div>\n            </div>\n        )\n    }\n    renderPageRight(){\n\n        const {\n            eventCountData,\n            validityEventCountData,\n            provinceEventCountData,\n            tradeEventCountMData\n        } = this.state;\n\n        const height = $('.page-right .charts-content').height();\n        const chartHeight = (height - 80 - 75 - 40) / 3;\n        //事件有效性\n        const charts6 = {\n            // data:validityEventCountData,\n            data:Mock.charts6,\n            height:chartHeight,\n            forceFit:true,\n            padding:'auto',\n            field:'count',\n            dimension:'eventName',\n            cols:{\n                percent: {\n                    formatter: val => {\n                        val = (val * 100).toFixed(0) + \"%\";\n                        return val;\n                    }\n                }\n            }\n        }\n        //事件类型\n        const charts7 = {\n            // data:eventCountData,\n            data:Mock.charts7,\n            height:chartHeight,\n            forceFit:true,\n            padding:'auto',\n            field:'count',\n            dimension:'eventName',\n            cols:{\n                percent: {\n                    formatter: val => {\n                        val = (val * 100).toFixed(0) + \"%\";\n                        return val;\n                    }\n                }\n            }\n        }\n\n        const charts8 = {\n            data: [{\n                name: \"London\",\n                \"Jan.\": 18.9,\n                \"Feb.\": 28.8,\n                \"Mar.\": 39.3,\n                \"Apr.\": 81.4,\n                May: 47,\n                \"Jun.\": 20.3,\n                \"Jul.\": 24,\n                \"Aug.\": 35.6\n            }, {\n                name: \"Berlin\",\n                \"Jan.\": 12.4,\n                \"Feb.\": 23.2,\n                \"Mar.\": 34.5,\n                \"Apr.\": 99.7,\n                May: 52.6,\n                \"Jun.\": 35.5,\n                \"Jul.\": 37.4,\n                \"Aug.\": 42.4\n            }],\n            fields:[\"Jan.\", \"Feb.\", \"Mar.\", \"Apr.\", \"May\", \"Jun.\", \"Jul.\", \"Aug.\"],\n            keyName:'月份',\n            value:'月均降雨量',\n            fieldsName:'name',\n            style:{\n                overflow:'auto'\n            },\n            padding:'auto',\n            height:chartHeight\n        };\n\n        const charts9 = {\n            // data:tradeEventCountMData,\n            data:Mock.charts7,\n            height:chartHeight,\n            padding:'auto',\n            fields:['count'],\n            xAxis:'eventName',\n            yAxis:'count'\n\n        }\n\n\n        return (\n            <div className='page-right'>\n                <div className='title-content'>\n                    <h3>异常综合统计</h3>\n                </div>\n                <div className='charts-content'>\n                    <div className='section-content has-child'>\n                        <div className='section-left child'>\n                            <h6>事件有效性</h6>\n                            <Labelline {...charts6}/>\n                        </div>\n                        <div className='section-right child'>\n                            <h6>事件类型</h6>\n                            <Labelline {...charts7}/>\n                        </div>\n                    </div>\n\n                    <div className='section-content has-child' style={{height:'75px',flex:'none'}}>\n                        <div className='child'>\n                            <h6 className='text-blue'>月上报事件数</h6>\n                            <div className='text'>\n                                <span>{'123,123'}</span> 件\n                            </div>\n                        </div>\n                        <div className='child'>\n                            <h6 className='text-blue'>有效性</h6>\n                            <div className='text'>\n                                <span>{'123.22'}</span> %\n                            </div>\n                        </div>\n                    </div>\n                    <div className='section-content'>\n                        <h6>不同事件上报事件情况</h6>\n                        <Groupedcolumn {...charts8}/>\n                    </div>\n                    <div className='section-content flex-column'>\n                        <h6>行业类型</h6>\n                        <Basicradar {...charts9}/>\n                    </div>\n                </div>\n\n            </div>\n        )\n    }\n    renderMain(){\n\n        return (\n            <div className='page-secondaryPathLeft page'>\n                {this.renderPageLeft()}\n            </div>\n        )\n\n    }\n\n}\n\nmodule.exports = SecondaryLoopLeft;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/Public/static/js/views/secondaryLoopLeft.js	(revision 9b22b8b5082588f1ec5faba9c7291df5336f804b)
+++ web/Public/static/js/views/secondaryLoopLeft.js	(date 1537599902430)
@@ -3,41 +3,25 @@
 import $ from 'jquery'
 //图表模型
 import {
-    Basicline,
-    Basiccolumn,
     Labelline,
-    Grouped,
-    Groupedcolumn,
     Basicbar,
-    Basicradar,
-    ChinaMapChart
 } from '../ui/ui.charts'
 
 import {
     ProvinceCountModel,
-    YearCountModel,
-    MeasureCountModel,
-    TradeCountModel,
-    EventCountModel,
-    RateCountModel,
-    ValidityEventCountModel,
-    ProvinceEventCountModel,
-    TradeEventCountModel,
+    YearCountModel
 } from '../models/business.models';
 
 import Mock from '../mock/mock';
 
+import SearchBar from '../ui/ui.searchbar.js';
+
+import Slider from "react-slick";
+
 //定义数据模型
 const provinceCountModel = ProvinceCountModel.getInstance(),
-    yearCountModel = YearCountModel.getInstance(),
-    measureCountModel = MeasureCountModel.getInstance(),
-    rateCountModel = RateCountModel.getInstance(),
-    tradeCountModel = TradeCountModel.getInstance(),
-    eventCountModel = EventCountModel.getInstance(),
-    validityEventCountModel = ValidityEventCountModel.getInstance(),
-    provinceEventCountModel = ProvinceEventCountModel.getInstance(),
-    tradeEventCountModel = TradeEventCountModel.getInstance();
-
+    yearCountModel = YearCountModel.getInstance();
+//巡检仪安装情况
 class SecondaryLoopLeft extends BaseView {
 
     constructor(props) {
@@ -45,445 +29,41 @@
         super(props);
 
         this.state = {
-
+            pageTitle:'巡检仪安装情况查询',
         }
     }
 
     componentDidMount(){
-        // this.pageInit();
-        this.setState({
-            pageStatus:'init'
-        });
-    }
-
-    pageInit(){
-        this.fetchProvinceCount();
-        this.fetchYearCount();
-        this.fetchMeasureCount();
-        this.fetchRateCount();
-        this.fetchTradeCount();
-        this.fetchEventCount();
-        this.fetchValidityEventCount();
-        this.fetchProvinceEventCount();
-        this.fetchTradeEventCount();
-
-    }
-
-    //不同省份安装情况
-    fetchProvinceCount(token){
-        const self = this;
-        provinceCountModel.setParam({
-            token:token
-        });
-        provinceCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-
-            self.setState({
-                provinceCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-    //安装时间安装情况
-    fetchYearCount(token){
-        const self = this;
-        yearCountModel.setParam({
-            token:token
-        });
-        yearCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-
-            self.setState({
-                yearCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-    //计量类型统计
-    fetchMeasureCount(token){
-        const self = this;
-        measureCountModel.setParam({
-            token:token
-        });
-        measureCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-
-            self.setState({
-                measureCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-    //综合倍率统计
-    fetchRateCount(token){
-        const self = this;
-        rateCountModel.setParam({
-            token:token
-        });
-        rateCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-
-            self.setState({
-                rateCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-    //行业类型统计
-    fetchTradeCount(token){
-        const self = this;
-        measureCountModel.setParam({
-            token:token
-        });
-        measureCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-            self.setState({
-                tradeCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-    //事件类型情况
-    fetchEventCount(token){
-        const self = this;
-        eventCountModel.setParam({
-            token:token
-        });
-        eventCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-            self.setState({
-                eventCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-    //有效性事件统计  未完
-    fetchValidityEventCount(token){
-        const self = this;
-        validityEventCountModel.setParam({
-            token:token
-        });
-        validityEventCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.countList || [];
-            const data = {
-                title:'事件有效性',
-                data:listData,
-                dimension:'eventName',
-                field:'count',
-                height:400,
-                padding:[80, 100, 80, 80],
-                radius:0.75,
-                innerRadius:0.6
-            };
 
-            self.setState({
-                validityEventCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
     }
 
-    //不同省份事件上报情况
-    fetchProvinceEventCount(token){
-        const self = this;
-        provinceEventCountModel.setParam({
-            token:token
-        });
-        provinceEventCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.eventList || [];
-            self.setState({
-                provinceEventCountData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
+    renderSearchBar(){
 
-    //行业类型
-    fetchTradeEventCount(token){
-        const self = this;
-        tradeEventCountModel.setParam({
-            token:token
-        });
-        tradeEventCountModel.excute((res)=>{
-            const resData = res.data || {};
-            const listData = resData.eventList || [];
+        const barOptions = {
 
-            self.setState({
-                tradeEventCountMData:listData
-            });
-        },(err)=>{
-            console.log(err)
-        })
-    }
-
-
-
-    renderPageLeft(){
-        const {
-            provinceCountData,
-            yearCountData,
-            measureCountData,
-            rateCountData,
-            tradeCountData
-        } = this.state;
-
-        const height = $('.page-left .charts-content').height();
-        const chartHeight = (height - 160) / 4;
-
-        //不同省份安装情况
-        const charts1 = {
-            // data:provinceCountData,
-            // data:Mock.charts1,
-            height:chartHeight,
-            xAxis:'name',
-            yAxis:'count',
-            forceFit:true,
-            padding:'auto',
-            cols:{
-                count: {
-                    tickCount: 2
-                }
-            },
-            style:{
-                overflow:'auto',
-            },
-            xLabel:{
-                offset:15,
-            },
-            yLabel:{
-                offset:5,
-            }
-        }
-
-        //安装时间
-        const charts2 = {
-            // data:yearCountData,
-            data:Mock.charts2,
-            height:chartHeight,
-            xAxis:'year',
-            yAxis:'count',
-            forceFit:true,
-            padding:'auto',
-            cols:{
-                year: {
-                    tickInterval: 1,
-                }
-            },
-            style:{
-                overflow:'auto',
-            },
-            xLabel:{
-                offset:15,
-            },
-            yLabel:{
-                offset:5,
-            }
-        }
-
-        //计量类型
-        const charts3 = {
-            // data:measureCountData,
-            data:Mock.charts3,
-            height:chartHeight,
-            forceFit:true,
-            padding:'auto',
-            field:'count',
-            dimension:'name',
-            cols:{
-                percent: {
-                    formatter: val => {
-                        val = (val * 100).toFixed(0) + "%";
-                        return val;
-                    }
-                }
-            }
-        }
-
-        //综合倍率
-        const charts4 = {
-            // data:rateCountData,
-            data:Mock.charts4,
-            height:chartHeight,
-            forceFit:true,
-            padding:'auto',
-            field:'count',
-            dimension:'rate',
-            cols:{
-                percent: {
-                    formatter: val => {
-                        val = (val * 100).toFixed(0) + "%";
-                        return val;
-                    }
-                }
-            }
-        }
-
-        //行业类型
-        const charts5 = {
-            // data:tradeCountData,
-            data:Mock.charts5,
-            height:chartHeight,
-            xAxis:'trade',
-            yAxis:'count',
-            forceFit:true,
-            padding:'auto',
-            style:{
-                overflow:'auto',
-            },
-            xLabel:{
-                offset:15,
-            },
-            yLabel:{
-                offset:5,
-            }
         }
 
-        return (
-            <div className='page-left'>
-                <div className='title-content'>
-                    <h3>安装综合统计</h3>
-                </div>
-                <div className='charts-content'>
-                    <div className='section-content'>
-                        <h6>不同省份安装情况</h6>
-                        <Basiccolumn {...charts1}/>
-                    </div>
-                    <div className='section-content'>
-                        <h6>安装时间</h6>
-                        <Basicline {...charts2} />
-
-                    </div>
-                    <div className='section-content has-child'>
-                        <div className='section-left child'>
-                            <h6>计量类型</h6>
-                            <Labelline {...charts3}/>
-                        </div>
-                        <div className='section-right child'>
-                            <h6>综合倍率</h6>
-                            <Labelline {...charts4}/>
-                        </div>
-                    </div>
-                    <div className='section-content'>
-                        <h6>行业类型</h6>
-                        <Basicbar {...charts5}/>
-                    </div>
-                </div>
+        return(
+            <div className='searchbar-content'>
+                <SearchBar {...barOptions}/>
             </div>
         )
     }
-    renderPageCenter(){
-        const {
-            provinceCountData
-        } = this.state;
-
-
-        const height = $('.section-content.map').height();
-        const mapHeight = height - 50;
-
-        const mapData = {
-            height:mapHeight,
-            // userData:provinceCountData,
-            userData:Mock.charts1,
-            padding:'auto',
-            xAxis:'name',
-            yAxis:'count',
-            scale:{
-                'count': {
-                    alias: '安装数量'
-                }
-            },
-            forceFit:true
-        }
 
-        return (
-            <div className='page-center'>
-                <h1>巡检仪大数据分析平台</h1>
-                <div className='section-content has-child'>
-                    <div className='section-left child'>
-                        <h4>巡检仪安装总量</h4>
-                        <div className='num-box'>
-                            <li className='num'>1</li>
-                            <li className='num'>2</li>
-                            <li className='num'>3</li>
-                            <li className='num'>3</li>
-                            <li className='num'>4</li>
-                            <li className='num'>4</li>
-                        </div>
-                    </div>
-                    <div className='section-right child'>
-                        <h4>巡检仪线上运行数量</h4>
-                        <div className='num-box'>
-                            <li className='num'>2</li>
-                            <li className='num'>3</li>
-                            <li className='num'>4</li>
-                            <li className='num'>5</li>
-                            <li className='num'>6</li>
-                            <li className='num'>3</li>
-                        </div>
-                    </div>
-                </div>
-                <div className='section-content map'>
-                    <ChinaMapChart {...mapData}/>
-                    <div className='bottom-txt'>中国电力科学研究院</div>
-                </div>
-            </div>
-        )
-    }
-    renderPageRight(){
 
+    renderPageOne(){
         const {
-            eventCountData,
             validityEventCountData,
-            provinceEventCountData,
-            tradeEventCountMData
         } = this.state;
 
-        const height = $('.page-right .charts-content').height();
-        const chartHeight = (height - 80 - 75 - 40) / 3;
-        //事件有效性
+        // 算出图表高度
+        const height = 300;
+        const loop_content = (height - 80 - 75 - 40) / 3;
+        // 区域占比
         const charts6 = {
             // data:validityEventCountData,
             data:Mock.charts6,
-            height:chartHeight,
-            forceFit:true,
-            padding:'auto',
-            field:'count',
-            dimension:'eventName',
-            cols:{
-                percent: {
-                    formatter: val => {
-                        val = (val * 100).toFixed(0) + "%";
-                        return val;
-                    }
-                }
-            }
-        }
-        //事件类型
-        const charts7 = {
-            // data:eventCountData,
-            data:Mock.charts7,
+            type:"area",
             height:chartHeight,
             forceFit:true,
             padding:'auto',
@@ -498,102 +78,76 @@
                 }
             }
         }
-
-        const charts8 = {
-            data: [{
-                name: "London",
-                "Jan.": 18.9,
-                "Feb.": 28.8,
-                "Mar.": 39.3,
-                "Apr.": 81.4,
-                May: 47,
-                "Jun.": 20.3,
-                "Jul.": 24,
-                "Aug.": 35.6
-            }, {
-                name: "Berlin",
-                "Jan.": 12.4,
-                "Feb.": 23.2,
-                "Mar.": 34.5,
-                "Apr.": 99.7,
-                May: 52.6,
-                "Jun.": 35.5,
-                "Jul.": 37.4,
-                "Aug.": 42.4
-            }],
-            fields:["Jan.", "Feb.", "Mar.", "Apr.", "May", "Jun.", "Jul.", "Aug."],
-            keyName:'月份',
-            value:'月均降雨量',
-            fieldsName:'name',
-            style:{
-                overflow:'auto'
-            },
-            padding:'auto',
-            height:chartHeight
-        };
-
-        const charts9 = {
-            // data:tradeEventCountMData,
-            data:Mock.charts7,
-            height:chartHeight,
-            padding:'auto',
-            fields:['count'],
-            xAxis:'eventName',
-            yAxis:'count'
-
-        }
-
-
         return (
-            <div className='page-right'>
-                <div className='title-content'>
-                    <h3>异常综合统计</h3>
-                </div>
-                <div className='charts-content'>
-                    <div className='section-content has-child'>
-                        <div className='section-left child'>
-                            <h6>事件有效性</h6>
-                            <Labelline {...charts6}/>
-                        </div>
-                        <div className='section-right child'>
-                            <h6>事件类型</h6>
-                            <Labelline {...charts7}/>
-                        </div>
-                    </div>
+            <div className="SecondaryLoopLeft content">
+                <div className="SecondaryLoopLeft_left">
+                    <div className="content_box">
+                        <div className="loop_top">
+                            <div className="loop_top_left">
+                                <div className="content_title">
+                                    二次回路异常事件统计
+                                </div>
+                                <div className="blue_underline"></div>
+                                <div className="loop_content">
+                                    1,420件
+                                </div>
+                            </div>
+                            <div className="loop_top_right">
+                                <div className="content_title no_border_left">
+                                    区域占比
+                                </div>
+                                <div className="loop_content">
+                                    <Labelline {...charts6}/>
+                                </div>
+                            </div>
+                        </div>
+                        <div className="loop_bottom">
 
-                    <div className='section-content has-child' style={{height:'75px',flex:'none'}}>
-                        <div className='child'>
-                            <h6 className='text-blue'>月上报事件数</h6>
-                            <div className='text'>
-                                <span>{'123,123'}</span> 件
-                            </div>
-                        </div>
-                        <div className='child'>
-                            <h6 className='text-blue'>有效性</h6>
-                            <div className='text'>
-                                <span>{'123.22'}</span> %
-                            </div>
-                        </div>
-                    </div>
-                    <div className='section-content'>
-                        <h6>不同事件上报事件情况</h6>
-                        <Groupedcolumn {...charts8}/>
-                    </div>
-                    <div className='section-content flex-column'>
-                        <h6>行业类型</h6>
-                        <Basicradar {...charts9}/>
-                    </div>
+                        </div>
+                    </div>
+                </div>
+                <div className="SecondaryLoopLeft_right"></div>
+            </div>
+        )
+    }
+
+    renderPageTwo(){
+        return 'two'
+    }
+
+    renderMain(){
+
+        var settings = {
+            dots: false,
+            dotsClass:'slick-dots slick-thumb item_box',
+            autoplay: false,
+            arrows: false,
+            infinite: true,
+            speed: 500,
+            autoplaySpeed:5000,
+            slidesToShow: 1,
+            slidesToScroll: 1,
+            touchMove:true
+        };
+        return (
+            <div className='page-slick page-SecondaryLoopLeft'>
+                <h1 className='page-title'>{this.state.pageTitle}</h1>
+                <div className='slick-btn'>
+                    <div className='btn active'></div>
+                    <div className='btn'></div>
+                </div>
+                {this.renderSearchBar()}
+                <div className='page-main slider_content'>
+                    <Slider {...settings}>
+                        <div className="slider_sec">
+                            {this.renderPageOne()}
+                        </div>
+                        <div className="slider_sec">
+                            {this.renderPageTwo()}
+                        </div>
+                    </Slider>
                 </div>
-
             </div>
-        )
-    }
-    renderMain(){
-
-        return (
-            <div className='page-secondaryPathLeft page'>
-                {this.renderPageLeft()}
-            </div>
         )
 
     }
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"JavaScriptSettings\">\n    <option name=\"languageLevel\" value=\"ES6\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- .idea/misc.xml	(revision 9b22b8b5082588f1ec5faba9c7291df5336f804b)
+++ .idea/misc.xml	(date 1537599781801)
@@ -1,6 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="JavaScriptSettings">
-    <option name="languageLevel" value="ES6" />
+    <option name="languageLevel" value="JSX" />
   </component>
 </project>
\ No newline at end of file
Index: web/Public/static/js/ui/ui.basicline.js
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import React from \"react\";\nimport {\n  G2,\n  Chart,\n  Geom,\n  Axis,\n  Tooltip,\n  Coord,\n  Label,\n  Legend,\n  View,\n  Guide,\n  Shape,\n  Facet,\n  Util\n} from \"bizcharts\";\n\nimport {\n  DEFAULT_COLOR\n} from '../data/color'\n\n//基础折线图\nclass BasicLine extends React.Component {\n  render() {\n\n    return (\n      <div>\n        <Chart placeholder {...this.props} scale={this.props.cols}>\n          <Axis name={this.props.xAxis} label={this.props.xLabel}/>\n          <Axis name={this.props.yAxis} label={this.props.yLabel}/>\n          <Tooltip\n            crosshairs={{\n              type: \"y\"\n            }}\n          />\n          <Geom type=\"line\" color={DEFAULT_COLOR} position={`${this.props.xAxis}*${this.props.yAxis}`} size={2} />\n          <Geom\n            type=\"point\"\n            color={'#fff'}\n            position={`${this.props.xAxis}*${this.props.yAxis}`}\n            size={3}\n            shape={\"circle\"}\n            style={{\n              stroke: \"#fff\",\n              lineWidth: 1\n            }}\n            \n          />\n        </Chart>\n      </div>\n    );\n  }\n}\n\nexport default BasicLine;
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
--- web/Public/static/js/ui/ui.basicline.js	(revision 9b22b8b5082588f1ec5faba9c7291df5336f804b)
+++ web/Public/static/js/ui/ui.basicline.js	(date 1537599902419)
@@ -34,6 +34,10 @@
             }}
           />
           <Geom type="line" color={DEFAULT_COLOR} position={`${this.props.xAxis}*${this.props.yAxis}`} size={2} />
+            {
+                this.props.type === "area" ?
+                <Geom type="area" color={DEFAULT_COLOR} position={`${this.props.xAxis}*${this.props.yAxis}`} size={2} />:""
+            }
           <Geom
             type="point"
             color={'#fff'}
